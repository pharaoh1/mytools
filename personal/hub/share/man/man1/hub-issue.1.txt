hub‐issue(1)  ‐‐  Manage  GitHub  issues for the current project.
===

## SYNOPSIS

‘hub issue‘  [‐a  <ASSIGNEE>]  [‐c  <CREATOR>]	[‐@  <USER>]  [‐s
<STATE>] [‐f <FORMAT>] [‐M <MILESTONE>] [‐l <LABELS>] [‐d <DATE>]
[‐o <SORT_KEY> [‐^]] [‐L <LIMIT>] ‘hub issue‘  create  [‐oc]  [‐m
<MESSAGE>|‐F  <FILE>]  [‐‐edit] [‐a <USERS>] [‐M <MILESTONE>] [‐l
<LABELS>] ‘hub issue‘ labels [‐‐color]


## COMMANDS

With no arguments, show a list of open issues.

  * _create_:
    Open an issue in the current project.

  * _labels_:
    List the labels available in this repository.

## OPTIONS
  * ‐a, ‐‐assignee <ASSIGNEE>:
    Display only issues assigned to <ASSIGNEE>.

    When opening an issue, this can be a comma‐separated list  of
people to
    assign to the new issue.

  * ‐c, ‐‐creator <CREATOR>:
    Display only issues created by <CREATOR>.

  * ‐@, ‐‐mentioned <USER>:
    Display only issues mentioning <USER>.

  * ‐s, ‐‐state <STATE>:
    Display issues with state <STATE> (default: "open").

  * ‐f, ‐‐format <FORMAT>:
    Pretty print the contents of the issues using format <FORMAT>
(default:
    "%sC%>(8)%i%Creset	%t%  l%n"). See the "PRETTY FORMATS" sec‐
tion of the
    git‐log  manual for some additional details on how placehold‐
ers are used in
    format. The available placeholders for issues are:

    %I: issue number

    %i: issue number prefixed with "#"

    %U: the URL of this issue

    %S: state (i.e. "open", "closed")

    %sC: set color to red or green, depending on issue state.

    %t: title

    %l: colored labels

    %L: raw, comma‐separated labels

    %b: body

    %au: login name of author

    %as: comma‐separated list of assignees

    %Mn: milestone number

    %Mt: milestone title

    %NC: number of comments

    %Nc: number of comments  wrapped  in  parentheses,	or  blank
string if zero.

    %cD: created date‐only (no time of day)

    %cr: created date, relative

    %ct: created date, UNIX timestamp

    %cI: created date, ISO 8601 format

    %uD: updated date‐only (no time of day)

    %ur: updated date, relative

    %ut: updated date, UNIX timestamp

    %uI: updated date, ISO 8601 format

  * ‐m, ‐‐message <MESSAGE>:
    Use  the first line of <MESSAGE> as issue title, and the rest
as issue description.

  * ‐F, ‐‐file <FILE>:
    Read the issue title and description from <FILE>.

  * ‐e, ‐‐edit:
    Further edit the contents of <FILE> in a text  editor  before
submitting.

  * ‐o, ‐‐browse:
    Open the new issue in a web browser.

  * ‐c, ‐‐copy:
    Put the URL of the new issue to clipboard instead of printing
it.

  * ‐M, ‐‐milestone <ID>:
    Display only issues for a GitHub milestone with id <ID>.

    When opening an issue, add this issue to a	GitHub	milestone
with id <ID>.

  * ‐l, ‐‐labels <LABELS>:
    Display only issues with certain labels.

    When  opening  an issue, add a comma‐separated list of labels
to this issue.

  * ‐d, ‐‐since <DATE>:
    Display only issues updated on or after <DATE>  in	ISO  8601
format.

  * ‐o, ‐‐sort <SORT_KEY>:
    Sort  displayed  issues  by "created" (default), "updated" or
"comments".

  * ‐^ ‐‐sort‐ascending:
    Sort by ascending dates instead of descending.

  * ‐L, ‐‐limit <LIMIT>:
    Display only the first <LIMIT> issues.

  * ‐‐include‐pulls:
    Include pull requests as well as issues.

  * ‐‐color:
    Enable colored output for labels list.






















































